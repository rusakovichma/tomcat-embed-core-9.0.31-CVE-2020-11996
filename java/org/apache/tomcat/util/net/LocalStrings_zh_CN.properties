# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

channel.nio.ssl.appOutputNotEmpty=应用程序输出缓冲区仍包含数据。数据可能会丢失。
channel.nio.ssl.closing=通道处于关闭状态
channel.nio.ssl.eofDuringHandshake=握手期间EOF
channel.nio.ssl.foundHttp=找到一个明文HTTP请求，它应该是一个加密的TLS连接
channel.nio.ssl.invalidCloseState=无效的关闭状态，不会发送网络数据。
channel.nio.ssl.notHandshaking=握手认证期间NOT_HANDSHAKING
channel.nio.ssl.remainingDataDuringClose=网络缓冲区中的剩余数据，无法发送SSL关闭消息，套接字仍将关闭
channel.nio.ssl.sniDefault=无法缓冲足够的数据来确定请求的SNI主机名。使用默认值
channel.nio.ssl.sniHostName=连接[{0}]中提取的SNI主机名称是[{1}]
channel.nio.ssl.timeoutDuringHandshake=握手期间超时。
channel.nio.ssl.unexpectedStatusDuringWrap=握手WRAP期间出现意外状态[{0}]。
channel.nio.ssl.unwrapFail=无法解包数据，无效状态 [{0}]
channel.nio.ssl.unwrapFailResize=由于缓冲区太小无法解包数据，无效状态 [{0}]

endpoint.alpn.negotiated=使用ALPN协商的[{0}]协议
endpoint.apr.applyConf=正将OpenSSLConfCmd应用在SSL Context上。
endpoint.apr.checkConf=检查配置OpenSSLConf
endpoint.apr.errApplyConf=不能对SSL上下文应用OpenSSLConf  配置
endpoint.apr.errMakeConf=无法创建OpenSSLConf 上下文
endpoint.apr.failSslContextMake=无法创建SSLContext。检查AprLifecycleListener中的SSLEngine 是否已启用，AprLifecycleListener是否已正确初始化，以及是否已指定有效的SSLProtocol
endpoint.apr.invalidSslProtocol=为SSLProtocol属性提供了无效值[{0}]
endpoint.apr.maxConnections.running=):APR终结点在运行时不支持MaxConnections的设置。[{0}]的现有值将继续使用。
endpoint.apr.maxConnections.unlimited=APR终结点不支持无限连接。[{0}]的现有值将继续使用。
endpoint.apr.pollAddInvalid=无效企图向一个轮询器中添加一个套接字[{0}]
endpoint.apr.tooManyCertFiles=证书文件配置超过了
endpoint.debug.channelCloseFail=关闭频道失败
endpoint.debug.destroySocket=将销毁socket [{0}]
endpoint.debug.socket=socket [{0}]
endpoint.debug.unlock.localNone=无法解除 [{0}] 的接受器，因为本地地址不可用
endpoint.err.close=抓住异常试图关闭socket
endpoint.err.unexpected=处理套接字时意外错误
endpoint.getAttribute=[{0}] 是 [{1}]
endpoint.init.bind=套接字绑定失败: [{0}] [{1}]
endpoint.init.notavail=APR.不可用
endpoint.invalidJmxNameSslHostCert=对于SSLHostConfigCertificate关联的主机[{0}]和证书类型[{1}]，无法生成有效的XML对象名称
endpoint.jmxRegistrationFailed=未能使用名称[{0}]注册JMX对象
endpoint.jsse.noSslContext=):找不到主机名[{0}]的SSLContext
endpoint.nio.stopLatchAwaitInterrupted=在等待轮询器停止时，该线程被中断
endpoint.nio.timeoutCme=处理超时异常. 这段代码已经被重复检查并且没有并发修改发现。如果你能重现这个错误，请提交一个tomcat bug, 提供重现步骤.
endpoint.noSslHostConfig=没有找到带有hostName[{0}]的SSLHostConfig元素，以匹配连接器[{1}]的默认SSLHostConfigName
endpoint.noSslHostName=SSL主机中没有被提供主机名
endpoint.poll.fail=严重轮询器故障（重新启动轮询器）[{0}] [{1}]
endpoint.poll.limitedpollsize=创建轮询器失败，大小：[{0}]
endpoint.process.fail=分配 socket 处理器出错
endpoint.processing.fail=运行.套接字处理器出错
endpoint.removeDefaultSslHostConfig=默认SSLHostConfig(名为[{0}])可能未被移除
endpoint.sendfile.addfail=发送文件(Sendfile)失败: [{0}] [{1}]
endpoint.sendfile.error=未知的sendfile异常。
endpoint.sendfileThreadStop=sendfile线程无法及时停止
endpoint.serverSocket.closeFailed=无法为 [{0}] 关闭服务器 socket
endpoint.setAttribute=设置. [{0}] 到 [{1}]
endpoint.timeout.err=处理套接字超时出错
endpoint.warn.executorShutdown=与线程池[{0}]关联的执行程序尚未完全关闭。 某些应用程序线程可能仍在运行。
endpoint.warn.incorrectConnectionCount=连接数不正确，在同一个套接字上调用多个socket.close。
endpoint.warn.noLocalAddr=无法确定套接字 [{0}] 的本地地址
endpoint.warn.noLocalName=无法确定 socket [{0}] 的本地主机名
endpoint.warn.noLocalPort=无法确定套接字 [{0}] 的本地端口
endpoint.warn.noRemotePort=无法确定 socket [{0}] 的远程端口
endpoint.warn.noUtilityExecutor=没有公共的executor 被设置时,创建一个.

jsse.ssl3=SSLv3 已显式启用。 已知该协议是不安全。

sniExtractor.clientHelloTooBig=):ClientHello 没有出现在单个TLS记录中，因此无法提取SNI信息

socket.apr.closed=与该链接所关联的 socket [{0}] 被关闭
socket.closed=与此连接关联的套接字已关闭。

sslHostConfig.certificate.notype=指定了多个证书，并且至少有一个证书缺少必需的属性类型
sslHostConfig.fileNotFound=配置文件 [{0}] 不存在
sslHostConfig.mismatch=属性[{0}]是在名为[{1}]的SSLHostConfig 上设置的，用于[{2}]配置语法，但SSLHostConfig 正与[{3}]配置语法一起使用
sslHostConfig.opensslconf.null=(:忽略设置空OpenSSLConf 的尝试
sslHostConfig.prefix_missing=协议[{0}]已添加到名为[{1}]的SSLHostConfig 上的协议列表中。检查是否缺少一个+/-前缀。

sslImplementation.cnfe=无法为类 [{0}] 创建SSLImplementation

sslUtilBase.noneSupported=SSL引擎不支持指定的[{0}]：[{1}]
sslUtilBase.skipped=某些指定的[{0}]不受SSL引擎支持，已被跳过：[{1}]
